# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference

# For a detailed guide to building and testing on Android, read the docs:
# https://circleci.com/docs/language-android/ for more details.
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  # See the Android orb documentation here: https://circleci.com/developer/orbs/orb/circleci/android
  android: circleci/android@3.0.2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build:
    docker:
      - image: cimg/android:2023.08
    steps:
      - checkout
      - restore_cache:
          key: android-orb-v1-
      - run:
          name: Chmod permissions
          command: chmod +x ./gradlew
      - run:
          name: Download Depedencies
          command: ./gradlew androidDependencies
      - save_cache:
          key: 'android-orb-v1-{{ epoch }}'
          paths:
            - ~/.android/build-cache
            - ~/.android/cache
      - run:
          name: Run Build
          command: ./gradlew build
      - store_artifacts:
          path: app/build/outputs/apk/debug/
          destination: artifact-file
  
  unit_test:
    docker:
      - image: cimg/android:2023.08
    steps:
      - checkout
      - restore_cache:
          key: android-orb-v1-
      - run:
          name: Run Unit Test
          command: ./gradlew clean test
# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
build_and_test:
    jobs:
      - build
      - unit_test:
          requires:
            - build